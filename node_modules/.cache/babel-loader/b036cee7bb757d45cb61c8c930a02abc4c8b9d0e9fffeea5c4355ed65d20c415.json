{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\tp\\\\src\\\\components\\\\Tabla.js\",\n  _s2 = $RefreshSig$();\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport React, { useState, useEffect } from \"react\";\nimport { useTable } from \"./react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tabla({\n  tabla\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [Data, setData] = useState([]);\n  async function Buscar_data() {\n    try {\n      const response = await fetch('http://localhost:4000/' + tabla);\n      if (response.ok) {\n        response.json().then(data => set_tabla(data));\n      } else {\n        console.log('No render');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  Buscar_data();\n  function Table({\n    columns,\n    data\n  }) {\n    _s();\n    const {\n      getTableProps,\n      getTableBodyProps,\n      headerGroups,\n      rows,\n      prepareRow\n    } = useTable({\n      columns,\n      data\n    });\n  }\n  _s(Table, \"bEm7KCF8mA6wctmED8HARQNSYg8=\", false, function () {\n    return [useTable];\n  });\n  function set_tabla(data) {\n    try {\n      setData(data);\n    } catch (error) {}\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ml-3 text-center mayus\",\n      style: {\n        color: \"green\"\n      },\n      children: tabla\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      responsive: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n}\n_s2(Tabla, \"9n+SE//EAYnFPAbWuMNi+6Aweh8=\");\n_c = Tabla;\nexport default Tabla;\nvar _c;\n$RefreshReg$(_c, \"Tabla\");","map":{"version":3,"names":["Table","Container","React","useState","useEffect","useTable","jsxDEV","_jsxDEV","Tabla","tabla","_s2","_s","$RefreshSig$","Data","setData","Buscar_data","response","fetch","ok","json","then","data","set_tabla","console","log","error","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","responsive","_c","$RefreshReg$"],"sources":["C:/React/tp/src/components/Tabla.js"],"sourcesContent":["import Table from 'react-bootstrap/Table';\r\nimport Container from 'react-bootstrap/Container';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useTable } from \"./react-table\";\r\nfunction Tabla({ tabla }) {\r\n    const [Data, setData] = useState([])\r\n\r\n    async function Buscar_data() {\r\n        try {\r\n            const response = await fetch('http://localhost:4000/' + tabla);\r\n            if (response.ok) {\r\n                response.json().then(data => set_tabla(data))\r\n            } else {\r\n                console.log('No render');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    Buscar_data();\r\n\r\n    function Table({ columns, data }) {\r\n        const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow\r\n        } = useTable({\r\n            columns,\r\n            data\r\n        });\r\n    }\r\n        function set_tabla(data) {\r\n            try {\r\n                setData(data);\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <h2 className=\"ml-3 text-center mayus\" style={{ color: \"green\" }}>{tabla}</h2>\r\n                <Table responsive>\r\n\r\n                </Table>\r\n            </Container>\r\n        );\r\n    }\r\n    export default Tabla;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,uBAAuB;AACzC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzC,SAASC,KAAKA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpC,eAAeY,WAAWA,CAAA,EAAG;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGR,KAAK,CAAC;MAC9D,IAAIO,QAAQ,CAACE,EAAE,EAAE;QACbF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIC,SAAS,CAACD,IAAI,CAAC,CAAC;MACjD,CAAC,MAAM;QACHE,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAC5B;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EACJ;EACAV,WAAW,CAAC,CAAC;EAEb,SAASf,KAAKA,CAAC;IAAE0B,OAAO;IAAEL;EAAK,CAAC,EAAE;IAAAV,EAAA;IAC9B,MAAM;MACFgB,aAAa;MACbC,iBAAiB;MACjBC,YAAY;MACZC,IAAI;MACJC;IACJ,CAAC,GAAG1B,QAAQ,CAAC;MACTqB,OAAO;MACPL;IACJ,CAAC,CAAC;EACN;EAACV,EAAA,CAXQX,KAAK;IAAA,QAONK,QAAQ;EAAA;EAKZ,SAASiB,SAASA,CAACD,IAAI,EAAE;IACrB,IAAI;MACAP,OAAO,CAACO,IAAI,CAAC;IAEjB,CAAC,CAAC,OAAOI,KAAK,EAAE,CAEhB;EACJ;EAEA,oBACIlB,OAAA,CAACN,SAAS;IAAA+B,QAAA,gBACNzB,OAAA;MAAI0B,SAAS,EAAC,wBAAwB;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAH,QAAA,EAAEvB;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9EhC,OAAA,CAACP,KAAK;MAACwC,UAAU;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEpB;AAAC7B,GAAA,CA9CIF,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA+CV,eAAeA,KAAK;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}