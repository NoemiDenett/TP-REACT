{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\tp\\\\src\\\\components\\\\Tabla.js\";\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tabla({\n  tabla\n}) {\n  async function Buscar_data() {\n    try {\n      const response = await fetch('http://localhost:4000/' + tabla);\n      if (response.ok) {\n        response.json().then(data => render(data));\n      } else {\n        console.log('No render');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  Buscar_data();\n  function render(data) {}\n\n  // `map` over the first object in the array\n  // and get an array of keys and add them\n  // to TH elements\n  function getHeadings(data) {\n    return Object.keys(data[0]).map(key => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  // `map` over the data to return\n  // row data, passing in each mapped object\n  // to `getCells`\n  function getRows(data) {\n    return data.map(obj => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: getCells(obj)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  // Return an array of cell data using the\n  // values of each object\n  function getCells(obj) {\n    return Object.values(obj).map(value => {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this);\n    });\n  }\n\n  // Simple component that gets the\n  // headers and then the rows\n  function Example({\n    data\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: getHeadings(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: getRows(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n  const data = [{\n    \"Model\": \"Mazda RX4\",\n    \"mpg\": 21,\n    \"cyl\": 6\n  }, {\n    \"Model\": \"Mazda RX4 Wag\",\n    \"mpg\": 21,\n    \"cyl\": 6\n  }, {\n    \"Model\": \"Datsun 710\",\n    \"mpg\": 22.8,\n    \"cyl\": \"\"\n  }, {\n    \"Model\": \"Hornet 4 Drive\",\n    \"mpg\": 21.4,\n    \"cyl\": \"\"\n  }, {\n    \"Model\": \"Hornet Sportabout\",\n    \"mpg\": 18.7,\n    \"cyl\": 8\n  }, {\n    \"Model\": \"Valiant\",\n    \"mpg\": 18.1,\n    \"cyl\": 6\n  }];\n}\n_c = Tabla;\nexport default Tabla;\nvar _c;\n$RefreshReg$(_c, \"Tabla\");","map":{"version":3,"names":["Table","jsxDEV","_jsxDEV","Tabla","tabla","Buscar_data","response","fetch","ok","json","then","data","render","console","log","error","getHeadings","Object","keys","map","key","children","fileName","_jsxFileName","lineNumber","columnNumber","getRows","obj","getCells","values","value","Example","_c","$RefreshReg$"],"sources":["C:/React/tp/src/components/Tabla.js"],"sourcesContent":["import Table from 'react-bootstrap/Table';\r\nfunction Tabla({ tabla }) {\r\n\r\n    async function Buscar_data() {\r\n        try {\r\n            const response = await fetch('http://localhost:4000/' + tabla);\r\n            if (response.ok) {\r\n                response.json().then(data => render(data))\r\n            } else {\r\n                console.log('No render');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    Buscar_data();\r\n\r\n    function render(data) {\r\n\r\n    }\r\n\r\n    // `map` over the first object in the array\r\n    // and get an array of keys and add them\r\n    // to TH elements\r\n    function getHeadings(data) {\r\n        return Object.keys(data[0]).map(key => {\r\n            return <th>{key}</th>;\r\n        });\r\n    }\r\n\r\n    // `map` over the data to return\r\n    // row data, passing in each mapped object\r\n    // to `getCells`\r\n    function getRows(data) {\r\n        return data.map(obj => {\r\n            return <tr>{getCells(obj)}</tr>;\r\n        });\r\n    }\r\n\r\n    // Return an array of cell data using the\r\n    // values of each object\r\n    function getCells(obj) {\r\n        return Object.values(obj).map(value => {\r\n            return <td>{value}</td>;\r\n        });\r\n    }\r\n\r\n    // Simple component that gets the\r\n    // headers and then the rows\r\n    function Example({ data }) {\r\n        return (\r\n            <table>\r\n                <thead>{getHeadings(data)}</thead>\r\n                <tbody>{getRows(data)}</tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    const data = [{ \"Model\": \"Mazda RX4\", \"mpg\": 21, \"cyl\": 6 }, { \"Model\": \"Mazda RX4 Wag\", \"mpg\": 21, \"cyl\": 6 }, { \"Model\": \"Datsun 710\", \"mpg\": 22.8, \"cyl\": \"\" }, { \"Model\": \"Hornet 4 Drive\", \"mpg\": 21.4, \"cyl\": \"\" }, { \"Model\": \"Hornet Sportabout\", \"mpg\": 18.7, \"cyl\": 8 }, { \"Model\": \"Valiant\", \"mpg\": 18.1, \"cyl\": 6 }];\r\n\r\n}\r\nexport default Tabla;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}