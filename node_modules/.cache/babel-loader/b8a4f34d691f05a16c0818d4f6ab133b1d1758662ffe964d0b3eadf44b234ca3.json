{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\tp\\\\src\\\\components\\\\Tabla.js\";\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tabla({\n  tabla\n}) {\n  async function Buscar_data() {\n    try {\n      const response = await fetch('http://localhost:4000/' + tabla);\n      if (response.ok) {\n        response.json().then(data => render(data));\n      } else {\n        console.log('No render');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  Buscar_data();\n  function render(data) {\n    const keys = Object.keys(data.length ? data[0] : {});\n    /*#__PURE__*/_jsxDEV(Table, {\n      responsive: \"sm\",\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"ml-3 text-center\",\n        style: {\n          color: \"green\"\n        },\n        children: [\" \", tabla, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: keys.map((item, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: item\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: keys.map((key, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this))\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n}\n_c = Tabla;\nexport default Tabla;\nvar _c;\n$RefreshReg$(_c, \"Tabla\");","map":{"version":3,"names":["Table","jsxDEV","_jsxDEV","Tabla","tabla","Buscar_data","response","fetch","ok","json","then","data","render","console","log","error","keys","Object","length","responsive","striped","bordered","hover","children","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","item","idx","key","_c","$RefreshReg$"],"sources":["C:/React/tp/src/components/Tabla.js"],"sourcesContent":["import Table from 'react-bootstrap/Table';\r\nfunction Tabla({ tabla }) {\r\n\r\n    async function Buscar_data() {\r\n        try {\r\n            const response = await fetch('http://localhost:4000/' + tabla);\r\n            if (response.ok) {\r\n                response.json().then(data => render(data))\r\n            } else {\r\n                console.log('No render');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    Buscar_data();\r\n\r\n    function render(data) {\r\n        const keys = Object.keys(data.length ? data[0] : {});\r\n        <Table responsive=\"sm\" striped bordered hover>\r\n            <h2 className=\"ml-3 text-center\" style={{ color: \"green\" }}> {tabla} </h2>\r\n            <thead>\r\n                <tr>\r\n                    {keys.map((item, idx) => (\r\n                        <th key={idx}>{item}</th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {data.map((item, idx) => (\r\n                    <tr key={idx}>\r\n                        {keys.map((key, idx) => (\r\n                            <td>{item[key]}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    }\r\n}\r\nexport default Tabla;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,SAASC,KAAKA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAEtB,eAAeC,WAAWA,CAAA,EAAG;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGH,KAAK,CAAC;MAC9D,IAAIE,QAAQ,CAACE,EAAE,EAAE;QACbF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIC,MAAM,CAACD,IAAI,CAAC,CAAC;MAC9C,CAAC,MAAM;QACHE,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MAC5B;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACtB;EACJ;EACAV,WAAW,CAAC,CAAC;EAEb,SAASO,MAAMA,CAACD,IAAI,EAAE;IAClB,MAAMK,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACL,IAAI,CAACO,MAAM,GAAGP,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,aAAAT,OAAA,CAACF,KAAK;MAACmB,UAAU,EAAC,IAAI;MAACC,OAAO;MAACC,QAAQ;MAACC,KAAK;MAAAC,QAAA,gBACzCrB,OAAA;QAAIsB,SAAS,EAAC,kBAAkB;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAH,QAAA,GAAC,GAAC,EAACnB,KAAK,EAAC,GAAC;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1E5B,OAAA;QAAAqB,QAAA,eACIrB,OAAA;UAAAqB,QAAA,EACKP,IAAI,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAChB/B,OAAA;YAAAqB,QAAA,EAAeS;UAAI,GAAVC,GAAG;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAC3B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACR5B,OAAA;QAAAqB,QAAA,EACKZ,IAAI,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBAChB/B,OAAA;UAAAqB,QAAA,EACKP,IAAI,CAACe,GAAG,CAAC,CAACG,GAAG,EAAED,GAAG,kBACf/B,OAAA;YAAAqB,QAAA,EAAKS,IAAI,CAACE,GAAG;UAAC;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACtB;QAAC,GAHGG,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIR,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EACZ;AACJ;AAACK,EAAA,GAtCQhC,KAAK;AAuCd,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}